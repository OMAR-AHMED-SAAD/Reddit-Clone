spring.application.name=notification_service

# ===============================
# PostgreSQL Database Configuration
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/notification_service_pg
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA & Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# ===============================
# MongoDB Configuration
# ===============================
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.uri=mongodb://root:example@localhost:27017/notification_service_mongo?authSource=admin
spring.data.mongodb.database=notification_service_mongo

# Class Paths for testing
# Please change the below paths to the paths of your models (the package name as it will be used in reflection code in the test cases)
ModelsPath.DeliveryChannel = com.example.miniapp.models.DeliveryChannel
ModelsPath.Notification = com.example.miniapp.models.entity.Notification
ModelsPath.NotificationRequest = com.example.miniapp.models.dto.NotificationRequest
ModelsPath.NotificationResponse = com.example.miniapp.models.NotificationResponse
ModelsPath.NotificationType = com.example.miniapp.models.enums.NotificationType
ModelsPath.PreferenceUpdate = com.example.miniapp.models.PreferenceUpdate